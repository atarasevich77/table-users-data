{"version":3,"sources":["EditData/EditData.js","SimpleTable/SimpleTable.js","MatTable/MatTable.js","App.js","serviceWorker.js","index.js"],"names":["EditData","props","useState","data","setData","editMode","setEditMode","length","isValidData","setIsValidData","value","onChange","e","target","className","onClick","handleData","id","key","disabled","SimpleTable","title","addUsers","setUsers","Table","striped","bordered","hover","map","el","users","user","name","onSaveUser","username","email","address","phone","website","company","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","MatTable","icons","columns","field","render","rowData","editable","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","dataUpdate","tableData","onRowDelete","dataDelete","index","splice","App","wrapper","React","createRef","axios","method","url","then","response","catch","error","console","log","updatedUsers","forEach","to","exact","path","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"iTA6CeA,EA3CE,SAACC,GAAW,IAAD,EACAC,mBAASD,EAAME,KAAN,OADT,mBACjBA,EADiB,KACXC,EADW,OAEQF,oBAAS,GAFjB,mBAEjBG,EAFiB,KAEPC,EAFO,OAGcJ,mBAASC,EAAKI,OAAS,GAHrC,mBAGjBC,EAHiB,KAGJC,EAHI,KAoBxB,OACI,oCACKJ,EACG,6BACI,6BACI,2BAAOK,MAAOP,EAAMQ,SApBnB,SAACC,GAClBR,EAAQQ,EAAEC,OAAOH,OACjBD,EAAeG,EAAEC,OAAOH,MAAMH,OAAS,OAqB3B,4BAAQO,UAAU,6BAA6BC,QAlB5C,SAACH,GAChBX,EAAMe,WAAW,CAACC,GAAIhB,EAAME,KAAN,GAAkBe,IAAKjB,EAAME,KAAN,IAAmBO,MAAOP,IACvEG,GAAY,IAgBoEa,UAAWX,GAA/E,QACA,4BAAQM,UAAU,+BAA+BC,QAd5C,SAACH,GAClBR,EAAQH,EAAME,KAAN,OACRG,GAAY,KAYA,WAGJ,6BACI,6BACKH,EACD,4BAAQW,UAAU,qCAAqCC,QAAS,kBAAMT,GAAY,KAAlF,YC0BTc,EA3DK,SAACnB,GAEjB,IAAMoB,EAAQpB,EAAMoB,MAMpB,OACI,yBAAKP,UAAU,aACX,yBAAKA,UAAU,iCACX,wBAAIA,UAAU,aAAd,UAEJ,yBAAKA,UAAU,WACX,4BAAQA,UAAU,qCAAqCC,QAVlD,WACbd,EAAMqB,aASE,aACA,4BAAQR,UAAU,+BAA+BC,QAAS,kBAAMd,EAAMsB,SAAS,MAA/E,gBAEJ,yBAAKT,UAAU,UACX,kBAACU,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GACzB,+BACA,4BACKN,EAAMO,KAAI,SAAAC,GAAE,OAAI,wBAAIX,IAAKW,GAAKA,QAGnC,+BAEI5B,EAAM6B,MAAMF,KAAI,SAAAG,GAAI,OAChB,wBAAIb,IAAKa,EAAKd,IACV,4BAAKc,EAAKd,IACV,4BAAI,kBAAC,EAAD,CAAUd,KAAM,CAACc,GAAIc,EAAKd,GAAIC,IAAK,OAAQR,MAAOqB,EAAKC,MAAOhB,WAAYf,EAAMgC,cACpF,4BAAI,kBAAC,EAAD,CAAU9B,KAAM,CAACc,GAAIc,EAAKd,GAAIC,IAAK,WAAYR,MAAOqB,EAAKG,UAAWlB,WAAYf,EAAMgC,cAC5F,4BAAI,kBAAC,EAAD,CAAU9B,KAAM,CAACc,GAAIc,EAAKd,GAAIC,IAAK,QAASR,MAAOqB,EAAKI,OAAQnB,WAAYf,EAAMgC,cACtF,4BACI,wCAAcF,EAAKK,QAAL,QACd,uCAAaL,EAAKK,QAAL,OACb,sCAAYL,EAAKK,QAAL,MACZ,yCAAeL,EAAKK,QAAL,SACf,oCACI,oCAAUL,EAAKK,QAAL,SACV,oCAAUL,EAAKK,QAAL,WAGlB,4BAAI,kBAAC,EAAD,CAAUjC,KAAM,CAACc,GAAIc,EAAKd,GAAIC,IAAK,QAASR,MAAOqB,EAAKM,OAAQrB,WAAYf,EAAMgC,cACtF,4BAAI,kBAAC,EAAD,CAAU9B,KAAM,CAACc,GAAIc,EAAKd,GAAIC,IAAK,UAAWR,MAAOqB,EAAKO,SAAUtB,WAAYf,EAAMgC,cAC1F,4BACI,sCAAYF,EAAKQ,QAAL,MACZ,8CAAoBR,EAAKQ,QAAL,aACpB,oCAAUR,EAAKQ,QAAL,c,gSC/BxCC,EAAa,CACfC,IAAKC,sBAAW,SAACzC,EAAO0C,GAAR,OAAgB,kBAAC,IAAD,iBAAY1C,EAAZ,CAAmB0C,IAAKA,QACxDC,MAAOF,sBAAW,SAACzC,EAAO0C,GAAR,OAAgB,kBAAC,IAAD,iBAAW1C,EAAX,CAAkB0C,IAAKA,QACzDE,MAAOH,sBAAW,SAACzC,EAAO0C,GAAR,OAAgB,kBAAC,IAAD,iBAAW1C,EAAX,CAAkB0C,IAAKA,QACzDG,OAAQJ,sBAAW,SAACzC,EAAO0C,GAAR,OAAgB,kBAAC,IAAD,iBAAmB1C,EAAnB,CAA0B0C,IAAKA,QAClEI,YAAaL,sBAAW,SAACzC,EAAO0C,GAAR,OAAgB,kBAAC,IAAD,iBAAkB1C,EAAlB,CAAyB0C,IAAKA,QACtEK,KAAMN,sBAAW,SAACzC,EAAO0C,GAAR,OAAgB,kBAAC,IAAD,iBAAU1C,EAAV,CAAiB0C,IAAKA,QACvDM,OAAQP,sBAAW,SAACzC,EAAO0C,GAAR,OAAgB,kBAAC,IAAD,iBAAa1C,EAAb,CAAoB0C,IAAKA,QAC5DO,OAAQR,sBAAW,SAACzC,EAAO0C,GAAR,OAAgB,kBAAC,IAAD,iBAAgB1C,EAAhB,CAAuB0C,IAAKA,QAC/DQ,UAAWT,sBAAW,SAACzC,EAAO0C,GAAR,OAAgB,kBAAC,IAAD,iBAAe1C,EAAf,CAAsB0C,IAAKA,QACjES,SAAUV,sBAAW,SAACzC,EAAO0C,GAAR,OAAgB,kBAAC,IAAD,iBAAc1C,EAAd,CAAqB0C,IAAKA,QAC/DU,SAAUX,sBAAW,SAACzC,EAAO0C,GAAR,OAAgB,kBAAC,IAAD,iBAAkB1C,EAAlB,CAAyB0C,IAAKA,QACnEW,aAAcZ,sBAAW,SAACzC,EAAO0C,GAAR,OAAgB,kBAAC,IAAD,iBAAiB1C,EAAjB,CAAwB0C,IAAKA,QACtEY,YAAab,sBAAW,SAACzC,EAAO0C,GAAR,OAAgB,kBAAC,IAAD,iBAAW1C,EAAX,CAAkB0C,IAAKA,QAC/Da,OAAQd,sBAAW,SAACzC,EAAO0C,GAAR,OAAgB,kBAAC,IAAD,iBAAY1C,EAAZ,CAAmB0C,IAAKA,QAC3Dc,UAAWf,sBAAW,SAACzC,EAAO0C,GAAR,OAAgB,kBAAC,IAAD,iBAAmB1C,EAAnB,CAA0B0C,IAAKA,QACrEe,gBAAiBhB,sBAAW,SAACzC,EAAO0C,GAAR,OAAgB,kBAAC,IAAD,iBAAY1C,EAAZ,CAAmB0C,IAAKA,QACpEgB,WAAYjB,sBAAW,SAACzC,EAAO0C,GAAR,OAAgB,kBAAC,IAAD,iBAAgB1C,EAAhB,CAAuB0C,IAAKA,SAyFxDiB,EAtFE,SAAC3D,GAKd,OACI,yBAAKa,UAAU,aACX,yBAAKA,UAAU,iCACX,wBAAIA,UAAU,aAAd,UAEJ,yBAAKA,UAAU,WACX,4BAAQA,UAAU,qCAAqCC,QAVlD,WACbd,EAAMqB,aASE,aACA,4BAAQR,UAAU,+BAA+BC,QAAS,kBAAMd,EAAMsB,SAAS,MAA/E,gBAEJ,yBAAKT,UAAU,UACX,kBAAC,IAAD,CACIO,MAAM,QACNwC,MAAOrB,EACPsB,QAAS,CACL,CAAEzC,MAAO,IAAK0C,MAAO,MACrB,CAAE1C,MAAO,OAAQ0C,MAAO,QACxB,CAAE1C,MAAO,YAAa0C,MAAO,YAC7B,CAAE1C,MAAO,QAAS0C,MAAO,SACzB,CAAE1C,MAAO,UAAW0C,MAAO,UACvBC,OAAQ,SAAAC,GAAO,OACX,oCACI,wCAAcA,EAAQ7B,QAAR,QACd,uCAAa6B,EAAQ7B,QAAR,OACb,sCAAY6B,EAAQ7B,QAAR,MACZ,yCAAe6B,EAAQ7B,QAAR,SACf,oCACI,qCAAW6B,EAAQ7B,QAAR,SACX,qCAAW6B,EAAQ7B,QAAR,aAI3B,CAAEf,MAAO,QAAS0C,MAAO,SACzB,CAAE1C,MAAO,UAAW0C,MAAO,WAC3B,CAAE1C,MAAO,UAAW0C,MAAO,UACvBC,OAAQ,SAAAC,GAAO,OACX,oCACI,sCAAYA,EAAQ1B,QAAR,MACZ,8CAAoB0B,EAAQ1B,QAAR,aACpB,oCAAU0B,EAAQ1B,QAAR,QAI1BpC,KAAMF,EAAM6B,MACZoC,SAAU,CACNC,SAAU,SAAAC,GAAO,OACb,IAAIC,SAAQ,SAACC,EAASC,GAClBC,YAAW,WACPvE,EAAMsB,SAAN,sBAAmBtB,EAAM6B,OAAzB,CAAgCsC,KAEhCE,MACD,SAEXG,YAAa,SAACL,EAASM,GAAV,OACT,IAAIL,SAAQ,SAACC,EAASC,GAClBC,YAAW,WACP,IAAMG,EAAU,YAAO1E,EAAM6B,OAE7B6C,EADcD,EAAQE,UAAU3D,IACZmD,EACpBnE,EAAMsB,SAAN,YAAmBoD,IAEnBL,MACD,SAEXO,YAAa,SAAAH,GAAO,OAChB,IAAIL,SAAQ,SAACC,EAASC,GAClBC,YAAW,WACP,IAAMM,EAAU,YAAO7E,EAAM6B,OACvBiD,EAAQL,EAAQE,UAAU3D,GAChC6D,EAAWE,OAAOD,EAAO,GACzB9E,EAAMsB,SAAN,YAAmBuD,IAEnBR,MACD,eC1CpBW,MApEf,WAEI,IAAMC,EAAUC,IAAMC,YAFX,EAIelF,mBAAS,IAJxB,mBAIJ4B,EAJI,KAIGP,EAJH,KAKLF,EAAQ,CAAC,IAAI,OAAO,YAAa,QAAS,UAAW,QAAS,UAAW,WAEzEC,EAAW,WAMb+D,IAAM,CACFC,OAAQ,MACRC,IAAK,mFAEJC,MAAK,SAACC,GACHlE,EAASkE,EAAStF,SAErBuF,OAAM,SAACC,GACJC,QAAQC,IAAIF,OAIlB1D,EAAa,SAAC9B,GAChB,IAAM2F,EAAY,YAAOhE,GACzBgE,EAAaC,SAAQ,SAAAhE,GACdA,EAAKd,KAAOd,EAAI,KACf4B,EAAK5B,EAAI,KAAWA,EAAI,UAGhCoB,EAASuE,IAGb,OACI,kBAAC,IAAD,CAAQnD,IAAKuC,GACT,wBAAIpE,UAAU,oCACV,wBAAIA,UAAU,yCACV,kBAAC,IAAD,CAAMkF,GAAG,iBAAT,iBAEJ,wBAAIlF,UAAU,yCACV,kBAAC,IAAD,CAAMkF,GAAG,mBAAT,uBAIR,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,iBACV,kBAAC,EAAD,CACI7E,MAAOA,EACPS,MAAOA,EACPP,SAAUA,EACVD,SAAUA,EACVW,WAAYA,KAGxB,kBAAC,IAAD,CAAOgE,OAAK,EAACC,KAAK,mBACd,kBAAC,EAAD,CACI7E,MAAOA,EACPS,MAAOA,EACPP,SAAUA,EACVD,SAAUA,EACVW,WAAYA,OCxDZkE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASxC,OACP,kBAAC,IAAMyC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtB,MAAK,SAAAuB,GACJA,EAAaC,gBAEdtB,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMsB,c","file":"static/js/main.c114acda.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nconst EditData = (props) => {\r\n    const [data, setData] = useState(props.data['value']);\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [isValidData, setIsValidData] = useState(data.length > 0);\r\n\r\n    const handleChange = (e) => {\r\n        setData(e.target.value);\r\n        setIsValidData(e.target.value.length > 0);\r\n    }\r\n\r\n    const handleSave = (e) => {\r\n        props.handleData({id: props.data['id'], key: props.data['key'], value: data});\r\n        setEditMode(false);\r\n    }\r\n\r\n    const handleCancel = (e) => {\r\n        setData(props.data['value']);\r\n        setEditMode(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {editMode ?\r\n                <div>\r\n                    <div>\r\n                        <input value={data} onChange={handleChange}/>\r\n                    </div>\r\n\r\n                    <button className=\"btn btn-success btn-sm m-1\" onClick={handleSave} disabled={!isValidData}>Save</button>\r\n                    <button className=\"btn btn-secondary btn-sm m-1\" onClick={handleCancel}>Cancel</button>\r\n                </div>\r\n                :\r\n                <div>\r\n                    <div>\r\n                        {data}\r\n                        <button className=\"btn btn-outline-primary btn-sm m-1\" onClick={() => setEditMode(true)}>Edit</button>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditData;","import React from 'react';\r\nimport {Table} from \"react-bootstrap\";\r\nimport EditData from \"../EditData/EditData\";\r\n\r\nconst SimpleTable = (props) => {\r\n\r\n    const title = props.title;\r\n\r\n    const addUsers = () => {\r\n        props.addUsers();\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-md-center\">\r\n                <h1 className=\"display-5\">Users</h1>\r\n            </div>\r\n            <div className=\"row p-2\">\r\n                <button className=\"btn btn-primary btn-sm ml-auto m-1\" onClick={addUsers}>Add Users</button>\r\n                <button className=\"btn btn-secondary btn-sm m-1\" onClick={() => props.setUsers([])}>Clear Table</button>\r\n            </div>\r\n            <div className=\"row-md\">\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                    <tr>\r\n                        {title.map(el => <th key={el}>{el}</th>)}\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        props.users.map(user =>\r\n                            <tr key={user.id}>\r\n                                <td>{user.id}</td>\r\n                                <td><EditData data={{id: user.id, key: 'name', value: user.name}} handleData={props.onSaveUser}/></td>\r\n                                <td><EditData data={{id: user.id, key: 'username', value: user.username}} handleData={props.onSaveUser}/></td>\r\n                                <td><EditData data={{id: user.id, key: 'email', value: user.email}} handleData={props.onSaveUser}/></td>\r\n                                <td>\r\n                                    <div>street: {user.address['street']}</div>\r\n                                    <div>suite: {user.address['suite']}</div>\r\n                                    <div>city: {user.address['city']}</div>\r\n                                    <div>zipcode: {user.address['zipcode']}</div>\r\n                                    <div>geo:\r\n                                        <div>lat:{user.address['geo']['lat']}</div>\r\n                                        <div>lng:{user.address['geo']['lng']}</div>\r\n                                    </div>\r\n                                </td>\r\n                                <td><EditData data={{id: user.id, key: 'phone', value: user.phone}} handleData={props.onSaveUser}/></td>\r\n                                <td><EditData data={{id: user.id, key: 'website', value: user.website}} handleData={props.onSaveUser}/></td>\r\n                                <td>\r\n                                    <div>name: {user.company['name']}</div>\r\n                                    <div>catch Phrase: {user.company['catchPhrase']}</div>\r\n                                    <div>bs: {user.company['bs']}</div>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    }\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SimpleTable;","import React from 'react';\r\nimport MaterialTable from \"material-table\";\r\nimport { forwardRef } from 'react';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst MatTable = (props) => {\r\n    const addUsers = () => {\r\n        props.addUsers();\r\n    }\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-md-center\">\r\n                <h1 className=\"display-5\">Users</h1>\r\n            </div>\r\n            <div className=\"row p-2\">\r\n                <button className=\"btn btn-primary btn-sm ml-auto m-1\" onClick={addUsers}>Add Users</button>\r\n                <button className=\"btn btn-secondary btn-sm m-1\" onClick={() => props.setUsers([])}>Clear Table</button>\r\n            </div>\r\n            <div className=\"row-md\">\r\n                <MaterialTable\r\n                    title=\"Users\"\r\n                    icons={tableIcons}\r\n                    columns={[\r\n                        { title: '#', field: 'id' },\r\n                        { title: 'Name', field: 'name' },\r\n                        { title: 'User Name', field: 'username' },\r\n                        { title: 'Email', field: 'email' },\r\n                        { title: 'Address', field: 'address',\r\n                            render: rowData =>\r\n                                <>\r\n                                    <div>Street: {rowData.address['street']}</div>\r\n                                    <div>Suite: {rowData.address['suite']}</div>\r\n                                    <div>City: {rowData.address['city']}</div>\r\n                                    <div>Zipcode: {rowData.address['zipcode']}</div>\r\n                                    <div>Geo:\r\n                                        <div>lat: {rowData.address['geo']['lat']}</div>\r\n                                        <div>lng: {rowData.address['geo']['lng']}</div>\r\n                                    </div>\r\n                                </>\r\n                        },\r\n                        { title: 'Phone', field: 'phone' },\r\n                        { title: 'Website', field: 'website' },\r\n                        { title: 'Company', field: 'company',\r\n                            render: rowData =>\r\n                                <>\r\n                                    <div>Name: {rowData.company['name']}</div>\r\n                                    <div>Catch Phrase: {rowData.company['catchPhrase']}</div>\r\n                                    <div>Bs: {rowData.company['bs']}</div>\r\n                                </>\r\n                        }\r\n                    ]}\r\n                    data={props.users}\r\n                    editable={{\r\n                        onRowAdd: newData =>\r\n                            new Promise((resolve, reject) => {\r\n                                setTimeout(() => {\r\n                                    props.setUsers([...props.users, newData]);\r\n\r\n                                    resolve();\r\n                                }, 1000)\r\n                            }),\r\n                        onRowUpdate: (newData, oldData) =>\r\n                            new Promise((resolve, reject) => {\r\n                                setTimeout(() => {\r\n                                    const dataUpdate = [...props.users];\r\n                                    const index = oldData.tableData.id;\r\n                                    dataUpdate[index] = newData;\r\n                                    props.setUsers([...dataUpdate]);\r\n\r\n                                    resolve();\r\n                                }, 1000)\r\n                            }),\r\n                        onRowDelete: oldData =>\r\n                            new Promise((resolve, reject) => {\r\n                                setTimeout(() => {\r\n                                    const dataDelete = [...props.users];\r\n                                    const index = oldData.tableData.id;\r\n                                    dataDelete.splice(index, 1);\r\n                                    props.setUsers([...dataDelete]);\r\n\r\n                                    resolve()\r\n                                }, 1000)\r\n                            }),\r\n                    }}\r\n                    />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MatTable;","import React, { useState } from 'react';\r\nimport axios from \"axios\";\r\nimport {BrowserRouter as Router, Route, Link} from \"react-router-dom\";\r\nimport SimpleTable from \"./SimpleTable/SimpleTable\";\r\nimport MatTable from \"./MatTable/MatTable\";\r\n\r\n\r\nfunction App() {\r\n    //fix Warning about deprecated findDOMNode usage\r\n    const wrapper = React.createRef();\r\n\r\n    const [users, setUsers] = useState([]);\r\n    const title = ['#','Name','User Name', 'Email', 'Address', 'Phone', 'Website', 'Company'];\r\n\r\n    const addUsers = () => {\r\n\r\n        // fetch(apiUrl)\r\n        //     .then(response => response.json())\r\n        //     .then(json => setUsers(json))\r\n\r\n        axios({\r\n            method: 'get',\r\n            url: 'https://cors-anywhere.herokuapp.com/https://jsonplaceholder.typicode.com/users'\r\n        })\r\n            .then((response) => {\r\n                setUsers(response.data);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const onSaveUser = (data) => {\r\n        const updatedUsers = [...users];\r\n        updatedUsers.forEach(user => {\r\n            if(user.id === data['id']){\r\n                user[data['key']] = data['value'];\r\n            }\r\n        });\r\n        setUsers(updatedUsers);\r\n    }\r\n\r\n    return (\r\n        <Router ref={wrapper}>\r\n            <ul className=\"list-group list-group-horizontal\">\r\n                <li className=\"list-group-item flex-fill text-center\">\r\n                    <Link to=\"/simple-table\">Simple table</Link>\r\n                </li>\r\n                <li className=\"list-group-item flex-fill text-center\">\r\n                    <Link to=\"/material-table\">Material UI table</Link>\r\n                </li>\r\n            </ul>\r\n\r\n            <Route exact path=\"/simple-table\">\r\n                    <SimpleTable\r\n                        title={title}\r\n                        users={users}\r\n                        setUsers={setUsers}\r\n                        addUsers={addUsers}\r\n                        onSaveUser={onSaveUser}\r\n                    />\r\n            </Route>\r\n            <Route exact path=\"/material-table\">\r\n                <MatTable\r\n                    title={title}\r\n                    users={users}\r\n                    setUsers={setUsers}\r\n                    addUsers={addUsers}\r\n                    onSaveUser={onSaveUser}\r\n                />\r\n            </Route>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}